/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game */ \"./src/scripts/game.js\");\n/* harmony import */ var _scripts_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/constants */ \"./src/scripts/constants.js\");\n\n\nconst canvasEl = document.getElementById(\"canvas\");\ncanvasEl.width = window.innerWidth; // DIM_X;\ncanvasEl.height = window.innerHeight; //DIM_Y ;\n\nconst ctx = canvasEl.getContext(\"2d\");\nconst game = new _scripts_game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](ctx);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQWtDO0FBQ2lCO0FBRW5ELE1BQU1HLFFBQVEsR0FBR0MsUUFBUSxDQUFDQyxjQUFjLENBQUMsUUFBUSxDQUFDO0FBQ2xERixRQUFRLENBQUNHLEtBQUssR0FBR0MsTUFBTSxDQUFDQyxVQUFVLEVBQUM7QUFDbkNMLFFBQVEsQ0FBQ00sTUFBTSxHQUFHRixNQUFNLENBQUNHLFdBQVcsRUFBQzs7QUFFckMsTUFBTUMsR0FBRyxHQUFHUixRQUFRLENBQUNTLFVBQVUsQ0FBQyxJQUFJLENBQUM7QUFDckMsTUFBTUMsSUFBSSxHQUFHLElBQUliLHFEQUFJLENBQUNXLEdBQUcsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpc2NvLXRhcC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBHYW1lIGZyb20gXCIuL3NjcmlwdHMvZ2FtZVwiO1xuaW1wb3J0IHsgRElNX1gsIERJTV9ZIH0gZnJvbSBcIi4vc2NyaXB0cy9jb25zdGFudHNcIjtcblxuY29uc3QgY2FudmFzRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImNhbnZhc1wiKVxuY2FudmFzRWwud2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aCAvLyBESU1fWDtcbmNhbnZhc0VsLmhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodCAvL0RJTV9ZIDtcblxuY29uc3QgY3R4ID0gY2FudmFzRWwuZ2V0Q29udGV4dChcIjJkXCIpO1xuY29uc3QgZ2FtZSA9IG5ldyBHYW1lKGN0eCk7XG4iXSwibmFtZXMiOlsiR2FtZSIsIkRJTV9YIiwiRElNX1kiLCJjYW52YXNFbCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ3aWR0aCIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJoZWlnaHQiLCJpbm5lckhlaWdodCIsImN0eCIsImdldENvbnRleHQiLCJnYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/animate.js":
/*!********************************!*\
  !*** ./src/scripts/animate.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _canvas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./canvas */ \"./src/scripts/canvas.js\");\n/* harmony import */ var _music__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./music */ \"./src/scripts/music.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants */ \"./src/scripts/constants.js\");\n// import Arrow from \"./arrow\";\n\n\n\n\n// const fs = require(\"fs\");\n// const { parse } = require(\"csv-parse\");\n\nclass Animate {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.music = new _music__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    this.canvas = new _canvas__WEBPACK_IMPORTED_MODULE_0__[\"default\"](ctx);\n    this.getChoreo = this.fetchData(\"../music/choreo_dance_the_night.json\");\n  }\n  static BPM = 110;\n  static FRAMES_PER_BEAT = 13;\n  static FRAMES_PER_MIN = Animate.BPM * Animate.FRAMES_PER_BEAT;\n  static SEC_PER_MIN = 60;\n  static FRAMES_PER_SEC = Animate.FRAMES_PER_MIN / Animate.SEC_PER_MIN;\n  static LENGTH_FRAME = 1000 / Animate.FRAMES_PER_SEC;\n  startGame() {\n    this.canvas.addTargets();\n    this.startAnimating(Animate.LENGTH_FRAME);\n  }\n  startAnimating(fps) {\n    this.frameCount = 1;\n    this.interval = setInterval(this.animate.bind(this), fps);\n  }\n  async fetchData(filename) {\n    let response = await fetch(filename);\n    let data = await response.json();\n    data = JSON.stringify(data);\n    data = JSON.parse(data);\n    return data;\n  }\n  animate() {\n    this.ctx.clearRect(0, 0, _constants__WEBPACK_IMPORTED_MODULE_2__.DIM_X, _constants__WEBPACK_IMPORTED_MODULE_2__.DIM_Y);\n    if (this.frameCount % 13 === 0) {\n      const beat = this.frameCount / 13;\n      for (let i = 0; i < _constants__WEBPACK_IMPORTED_MODULE_2__.ALL_DIRS.length; i++) {\n        if (this.choreo[beat][_constants__WEBPACK_IMPORTED_MODULE_2__.ALL_DIRS[i]]) {\n          this.canvas.createArrow(_constants__WEBPACK_IMPORTED_MODULE_2__.ALL_DIRS[i]);\n        }\n      }\n    }\n    this.canvas.draw();\n    this.canvas.update();\n    this.frameCount += 1;\n    if (this.frameCount > 24 * 19) {\n      clearInterval(this.interval);\n    }\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Animate);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9hbmltYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUM4QjtBQUNGO0FBQ3lCOztBQUVyRDtBQUNBOztBQUVBLE1BQU1LLE9BQU8sQ0FBQztFQUNWQyxXQUFXQSxDQUFDQyxHQUFHLEVBQUU7SUFDYixJQUFJLENBQUNBLEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0MsS0FBSyxHQUFHLElBQUlQLDhDQUFLLENBQUMsQ0FBQztJQUN4QixJQUFJLENBQUNRLE1BQU0sR0FBRyxJQUFJVCwrQ0FBTSxDQUFDTyxHQUFHLENBQUM7SUFDN0IsSUFBSSxDQUFDRyxTQUFTLEdBQUcsSUFBSSxDQUFDQyxTQUFTLENBQUMsc0NBQXNDLENBQUM7RUFDM0U7RUFFQSxPQUFPQyxHQUFHLEdBQUcsR0FBRztFQUNoQixPQUFPQyxlQUFlLEdBQUcsRUFBRTtFQUMzQixPQUFPQyxjQUFjLEdBQUdULE9BQU8sQ0FBQ08sR0FBRyxHQUFHUCxPQUFPLENBQUNRLGVBQWU7RUFDN0QsT0FBT0UsV0FBVyxHQUFHLEVBQUU7RUFDdkIsT0FBT0MsY0FBYyxHQUFHWCxPQUFPLENBQUNTLGNBQWMsR0FBR1QsT0FBTyxDQUFDVSxXQUFXO0VBQ3BFLE9BQU9FLFlBQVksR0FBRyxJQUFJLEdBQUNaLE9BQU8sQ0FBQ1csY0FBYztFQUdqREUsU0FBU0EsQ0FBQSxFQUFHO0lBQ1IsSUFBSSxDQUFDVCxNQUFNLENBQUNVLFVBQVUsQ0FBQyxDQUFDO0lBQ3hCLElBQUksQ0FBQ0MsY0FBYyxDQUFDZixPQUFPLENBQUNZLFlBQVksQ0FBQztFQUM3QztFQUVBRyxjQUFjQSxDQUFDQyxHQUFHLEVBQUU7SUFDaEIsSUFBSSxDQUFDQyxVQUFVLEdBQUcsQ0FBQztJQUNuQixJQUFJLENBQUNDLFFBQVEsR0FBR0MsV0FBVyxDQUFDLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUNMLEdBQUcsQ0FBQztFQUM1RDtFQUVBLE1BQU1WLFNBQVNBLENBQUNnQixRQUFRLEVBQUU7SUFDdEIsSUFBSUMsUUFBUSxHQUFHLE1BQU1DLEtBQUssQ0FBQ0YsUUFBUSxDQUFDO0lBQ3BDLElBQUlHLElBQUksR0FBRyxNQUFNRixRQUFRLENBQUNHLElBQUksQ0FBQyxDQUFDO0lBQ2hDRCxJQUFJLEdBQUdFLElBQUksQ0FBQ0MsU0FBUyxDQUFDSCxJQUFJLENBQUM7SUFDM0JBLElBQUksR0FBR0UsSUFBSSxDQUFDRSxLQUFLLENBQUNKLElBQUksQ0FBQztJQUN2QixPQUFPQSxJQUFJO0VBQ2Y7RUFHQUwsT0FBT0EsQ0FBQSxFQUFHO0lBQ04sSUFBSSxDQUFDbEIsR0FBRyxDQUFDNEIsU0FBUyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUNoQyw2Q0FBSyxFQUFFQyw2Q0FBSyxDQUFDO0lBQ3BDLElBQUksSUFBSSxDQUFDa0IsVUFBVSxHQUFDLEVBQUUsS0FBSyxDQUFDLEVBQUM7TUFDekIsTUFBTWMsSUFBSSxHQUFHLElBQUksQ0FBQ2QsVUFBVSxHQUFDLEVBQUU7TUFDL0IsS0FBSyxJQUFJZSxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUduQyxnREFBUSxDQUFDb0MsTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBRTtRQUN0QyxJQUFJLElBQUksQ0FBQ0UsTUFBTSxDQUFDSCxJQUFJLENBQUMsQ0FBQ2xDLGdEQUFRLENBQUNtQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1VBQ2hDLElBQUksQ0FBQzVCLE1BQU0sQ0FBQytCLFdBQVcsQ0FBQ3RDLGdEQUFRLENBQUNtQyxDQUFDLENBQUMsQ0FBQztRQUN4QztNQUNKO0lBQ0o7SUFDQSxJQUFJLENBQUM1QixNQUFNLENBQUNnQyxJQUFJLENBQUMsQ0FBQztJQUNsQixJQUFJLENBQUNoQyxNQUFNLENBQUNpQyxNQUFNLENBQUMsQ0FBQztJQUNwQixJQUFJLENBQUNwQixVQUFVLElBQUUsQ0FBQztJQUNsQixJQUFJLElBQUksQ0FBQ0EsVUFBVSxHQUFHLEVBQUUsR0FBQyxFQUFFLEVBQUU7TUFDekJxQixhQUFhLENBQUMsSUFBSSxDQUFDcEIsUUFBUSxDQUFDO0lBQ2hDO0VBQ0o7QUFDSjtBQUVBLCtEQUFlbEIsT0FBTyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rpc2NvLXRhcC8uL3NyYy9zY3JpcHRzL2FuaW1hdGUuanM/Mjg2OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgQXJyb3cgZnJvbSBcIi4vYXJyb3dcIjtcbmltcG9ydCBDYW52YXMgZnJvbSBcIi4vY2FudmFzXCI7XG5pbXBvcnQgTXVzaWMgZnJvbSBcIi4vbXVzaWNcIjtcbmltcG9ydCB7IEFMTF9ESVJTLCBESU1fWCwgRElNX1kgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuLy8gY29uc3QgZnMgPSByZXF1aXJlKFwiZnNcIik7XG4vLyBjb25zdCB7IHBhcnNlIH0gPSByZXF1aXJlKFwiY3N2LXBhcnNlXCIpO1xuXG5jbGFzcyBBbmltYXRlIHtcbiAgICBjb25zdHJ1Y3RvcihjdHgpIHtcbiAgICAgICAgdGhpcy5jdHggPSBjdHg7XG4gICAgICAgIHRoaXMubXVzaWMgPSBuZXcgTXVzaWMoKTtcbiAgICAgICAgdGhpcy5jYW52YXMgPSBuZXcgQ2FudmFzKGN0eCk7XG4gICAgICAgIHRoaXMuZ2V0Q2hvcmVvID0gdGhpcy5mZXRjaERhdGEoXCIuLi9tdXNpYy9jaG9yZW9fZGFuY2VfdGhlX25pZ2h0Lmpzb25cIilcbiAgICB9XG5cbiAgICBzdGF0aWMgQlBNID0gMTEwO1xuICAgIHN0YXRpYyBGUkFNRVNfUEVSX0JFQVQgPSAxMztcbiAgICBzdGF0aWMgRlJBTUVTX1BFUl9NSU4gPSBBbmltYXRlLkJQTSAqIEFuaW1hdGUuRlJBTUVTX1BFUl9CRUFUO1xuICAgIHN0YXRpYyBTRUNfUEVSX01JTiA9IDYwO1xuICAgIHN0YXRpYyBGUkFNRVNfUEVSX1NFQyA9IEFuaW1hdGUuRlJBTUVTX1BFUl9NSU4gLyBBbmltYXRlLlNFQ19QRVJfTUlOO1xuICAgIHN0YXRpYyBMRU5HVEhfRlJBTUUgPSAxMDAwL0FuaW1hdGUuRlJBTUVTX1BFUl9TRUM7XG5cbiAgICBcbiAgICBzdGFydEdhbWUoKSB7XG4gICAgICAgIHRoaXMuY2FudmFzLmFkZFRhcmdldHMoKTsgICBcbiAgICAgICAgdGhpcy5zdGFydEFuaW1hdGluZyhBbmltYXRlLkxFTkdUSF9GUkFNRSk7XG4gICAgfTtcblxuICAgIHN0YXJ0QW5pbWF0aW5nKGZwcykge1xuICAgICAgICB0aGlzLmZyYW1lQ291bnQgPSAxO1xuICAgICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwodGhpcy5hbmltYXRlLmJpbmQodGhpcyksZnBzKVxuICAgIH07XG5cbiAgICBhc3luYyBmZXRjaERhdGEoZmlsZW5hbWUpIHtcbiAgICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goZmlsZW5hbWUpO1xuICAgICAgICBsZXQgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgZGF0YSA9IEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShkYXRhKTtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgICAgICAgICAgICAgICAgICBcblxuICAgIGFuaW1hdGUoKSB7XG4gICAgICAgIHRoaXMuY3R4LmNsZWFyUmVjdCgwLDAsRElNX1gsIERJTV9ZKVxuICAgICAgICBpZiAodGhpcy5mcmFtZUNvdW50JTEzID09PSAwKXtcbiAgICAgICAgICAgIGNvbnN0IGJlYXQgPSB0aGlzLmZyYW1lQ291bnQvMTNcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgQUxMX0RJUlMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jaG9yZW9bYmVhdF1bQUxMX0RJUlNbaV1dKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2FudmFzLmNyZWF0ZUFycm93KEFMTF9ESVJTW2ldKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jYW52YXMuZHJhdygpO1xuICAgICAgICB0aGlzLmNhbnZhcy51cGRhdGUoKTtcbiAgICAgICAgdGhpcy5mcmFtZUNvdW50Kz0xO1xuICAgICAgICBpZiAodGhpcy5mcmFtZUNvdW50ID4gMjQqMTkpIHtcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFuaW1hdGU7Il0sIm5hbWVzIjpbIkNhbnZhcyIsIk11c2ljIiwiQUxMX0RJUlMiLCJESU1fWCIsIkRJTV9ZIiwiQW5pbWF0ZSIsImNvbnN0cnVjdG9yIiwiY3R4IiwibXVzaWMiLCJjYW52YXMiLCJnZXRDaG9yZW8iLCJmZXRjaERhdGEiLCJCUE0iLCJGUkFNRVNfUEVSX0JFQVQiLCJGUkFNRVNfUEVSX01JTiIsIlNFQ19QRVJfTUlOIiwiRlJBTUVTX1BFUl9TRUMiLCJMRU5HVEhfRlJBTUUiLCJzdGFydEdhbWUiLCJhZGRUYXJnZXRzIiwic3RhcnRBbmltYXRpbmciLCJmcHMiLCJmcmFtZUNvdW50IiwiaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImFuaW1hdGUiLCJiaW5kIiwiZmlsZW5hbWUiLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YSIsImpzb24iLCJKU09OIiwic3RyaW5naWZ5IiwicGFyc2UiLCJjbGVhclJlY3QiLCJiZWF0IiwiaSIsImxlbmd0aCIsImNob3JlbyIsImNyZWF0ZUFycm93IiwiZHJhdyIsInVwZGF0ZSIsImNsZWFySW50ZXJ2YWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/animate.js\n");

/***/ }),

/***/ "./src/scripts/arrow.js":
/*!******************************!*\
  !*** ./src/scripts/arrow.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/scripts/constants.js\");\n\nclass Arrow {\n  constructor(ctx, dir, coords) {\n    this.ctx = ctx;\n    this.dir = dir;\n    this.coords = coords;\n    this.pressed = 0;\n    this.newImage = this.getImage();\n  }\n  getImage() {\n    let imageObject;\n    if (this.dir === 'l' || this.dir === 'r') {\n      // if arrow is horizontal\n      imageObject = new Image(_constants__WEBPACK_IMPORTED_MODULE_0__.ARROW_HEIGHT, _constants__WEBPACK_IMPORTED_MODULE_0__.ARROW_WIDTH);\n    } else {\n      // else if arrow is vertical\n      imageObject = new Image(_constants__WEBPACK_IMPORTED_MODULE_0__.ARROW_WIDTH, _constants__WEBPACK_IMPORTED_MODULE_0__.ARROW_HEIGHT);\n    }\n    imageObject.src = _constants__WEBPACK_IMPORTED_MODULE_0__.IMAGE_SRC[this.dir];\n    return imageObject;\n  }\n  draw() {\n    let imageObject = this.newImage;\n    this.ctx.drawImage(imageObject, ...this.coords, imageObject.width, imageObject.height);\n  }\n  createImage() {\n    let imageObject = this.newImage;\n    imageObject.onload = this.draw.bind(this);\n  }\n  getCenter() {\n    const radius = _constants__WEBPACK_IMPORTED_MODULE_0__.ARROW_HEIGHT / 2 + _constants__WEBPACK_IMPORTED_MODULE_0__.GAP / 15;\n    let [x, y] = this.coords;\n    const horizArrows = ['l', 'r'];\n    const centerX = horizArrows.includes(this.dir) ? x + _constants__WEBPACK_IMPORTED_MODULE_0__.ARROW_HEIGHT / 2 : x + _constants__WEBPACK_IMPORTED_MODULE_0__.ARROW_WIDTH / 2;\n    const centerY = horizArrows.includes(this.dir) ? y + _constants__WEBPACK_IMPORTED_MODULE_0__.ARROW_WIDTH / 2 : y + _constants__WEBPACK_IMPORTED_MODULE_0__.ARROW_HEIGHT / 2;\n    return [radius, centerX, centerY];\n  }\n  pressedAttempt() {\n    const [radius, centerX, centerY] = this.getCenter();\n    if (this.pressed) {\n      this.outlineCircle(radius, centerX, centerY);\n      // this.pressedCircle(radius, centerX, centerY);\n      this.pressed -= 1;\n    }\n  }\n  targetCircle() {\n    const [radius, centerX, centerY] = this.getCenter();\n\n    // if (this.pressed) {\n    //     this.pressedCircle(radius, centerX, centerY);\n    //     this.pressed -=1;\n    // } else {\n    //     this.emptyCircle(radius, centerX, centerY);\n    // }\n    this.outlineCircle(radius, centerX, centerY);\n  }\n  outlineCircle(radius, centerX, centerY) {\n    // outline target circle with color\n    this.ctx.beginPath();\n    this.ctx.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);\n    this.ctx.lineWidth = 3;\n    this.ctx.strokeStyle = _constants__WEBPACK_IMPORTED_MODULE_0__.COLORS[this.dir];\n    this.ctx.stroke();\n\n    // blur target circle\n    this.ctx.shadowBlur = 20;\n    this.ctx.shadowColor = \"black\";\n  }\n  emptyCircle(radius, centerX, centerY) {\n    // fill target circle black\n    this.ctx.beginPath();\n    this.ctx.arc(centerX, centerY, radius + 4, 0, 2 * Math.PI, false);\n    this.ctx.fillStyle = \"#000000\";\n    this.ctx.fill();\n    this.ctx.strokeStyle = \"#000000\";\n    this.ctx.stroke();\n  }\n  pressedCircle(radius, centerX, centerY) {\n    // fill target circle when clicked\n    this.ctx.beginPath();\n    this.ctx.arc(centerX, centerY, radius + 4, 0, 2 * Math.PI, false);\n    this.ctx.fillStyle = _constants__WEBPACK_IMPORTED_MODULE_0__.COLORS[this.dir];\n    this.ctx.fill();\n    this.ctx.strokeStyle = \"#000000\";\n    this.ctx.stroke();\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (Arrow);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/arrow.js\n");

/***/ }),

/***/ "./src/scripts/canvas.js":
/*!*******************************!*\
  !*** ./src/scripts/canvas.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _arrow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrow */ \"./src/scripts/arrow.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/scripts/constants.js\");\n\n\nclass Canvas {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.score = 0;\n    this.arrows = [];\n    this.targets = this.createTargets();\n    document.addEventListener(\"keydown\", this.keyTap.bind(this));\n  }\n  static SPEED = 5;\n  static PRESSED_FRAMES = 10;\n  static DIST_THRESHOLD = 25;\n  keyTap(event) {\n    if (_constants__WEBPACK_IMPORTED_MODULE_1__.ALL_DIRS.includes(_constants__WEBPACK_IMPORTED_MODULE_1__.ARROW_KEYS[event.key])) {\n      event.preventDefault();\n      let dir = _constants__WEBPACK_IMPORTED_MODULE_1__.ARROW_KEYS[event.key];\n      let targetArrow = this.targets[dir];\n      targetArrow.pressed = Canvas.PRESSED_FRAMES;\n      let dirArrows = this.arrows.filter(arrow => arrow.dir === targetArrow.dir);\n      console.log(targetArrow);\n      const closestArrow = dirArrows.sort(arrow => Math.abs(arrow.coords[1] - targetArrow.coords[1]))[0];\n      if (closestArrow) {\n        closestArrow.pressed = Canvas.PRESSED_FRAMES;\n        closestArrow.attempt = closestArrow.coords[1] - targetArrow.coords[1];\n        console.log(closestArrow);\n        this.getScore(closestArrow);\n      }\n      ;\n    }\n  }\n  getScore(arrow) {\n    const dist = arrow.attempt;\n    const message = document.querySelector(\"#message\");\n    switch (Math.abs(Math.floor(dist / 80))) {\n      case 0:\n        message.innerText = \"Perfect!\";\n        break;\n      case 1:\n        message.innerText = \"Great!\";\n        break;\n      case 2:\n        message.innerText = \"Nice!\";\n        break;\n      case 3:\n        message.innerText = \"Close\";\n      default:\n        message.innerText = \"Keep trying\";\n        break;\n    }\n    setTimeout(() => {\n      message.innerText = \"\";\n    }, 500);\n  }\n  createTargets() {\n    const allTargets = {};\n    _constants__WEBPACK_IMPORTED_MODULE_1__.ALL_DIRS.forEach(dir => {\n      let arrow = new _arrow__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.ctx, dir, _constants__WEBPACK_IMPORTED_MODULE_1__.COORDS[dir]);\n      allTargets[dir] = arrow;\n    });\n    return allTargets;\n  }\n  addTargets() {\n    Object.values(this.targets).forEach(arrow => {\n      arrow.targetCircle();\n      arrow.draw();\n    });\n  }\n  createArrow(dir) {\n    // let randDir = ALL_DIRS[Math.floor(Math.random()*4)];\n    let startCoords = _constants__WEBPACK_IMPORTED_MODULE_1__.COORDS[dir].slice();\n    startCoords[1] = _constants__WEBPACK_IMPORTED_MODULE_1__.DIM_Y - _constants__WEBPACK_IMPORTED_MODULE_1__.ARROW_HEIGHT;\n    let newArrow = new _arrow__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.ctx, dir, startCoords);\n    newArrow.createImage();\n    this.arrows.push(newArrow);\n  }\n  draw() {\n    this.addTargets(this.ctx);\n    this.arrows.forEach(arrow => {\n      // arrow.pressedAttempt();\n      arrow.draw();\n    });\n  }\n  update() {\n    this.arrows = this.arrows.filter(arrow => arrow.coords[1] > -_constants__WEBPACK_IMPORTED_MODULE_1__.ARROW_HEIGHT);\n    this.arrows.forEach(arrow => {\n      arrow.coords[1] -= Canvas.SPEED;\n    });\n  }\n}\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Canvas);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/canvas.js\n");

/***/ }),

/***/ "./src/scripts/constants.js":
/*!**********************************!*\
  !*** ./src/scripts/constants.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ALL_DIRS: function() { return /* binding */ ALL_DIRS; },\n/* harmony export */   ARROW_HEIGHT: function() { return /* binding */ ARROW_HEIGHT; },\n/* harmony export */   ARROW_KEYS: function() { return /* binding */ ARROW_KEYS; },\n/* harmony export */   ARROW_WIDTH: function() { return /* binding */ ARROW_WIDTH; },\n/* harmony export */   COLORS: function() { return /* binding */ COLORS; },\n/* harmony export */   COORDS: function() { return /* binding */ COORDS; },\n/* harmony export */   DIM_X: function() { return /* binding */ DIM_X; },\n/* harmony export */   DIM_Y: function() { return /* binding */ DIM_Y; },\n/* harmony export */   GAP: function() { return /* binding */ GAP; },\n/* harmony export */   HORIZ_Y: function() { return /* binding */ HORIZ_Y; },\n/* harmony export */   IMAGE_SRC: function() { return /* binding */ IMAGE_SRC; },\n/* harmony export */   TAB_X: function() { return /* binding */ TAB_X; },\n/* harmony export */   VERT_Y: function() { return /* binding */ VERT_Y; }\n/* harmony export */ });\nconst ALL_DIRS = ['l', 'd', 'u', 'r'];\nconst DIM_X = 1000;\nconst DIM_Y = 600;\nconst ARROW_WIDTH = 40;\nconst ARROW_HEIGHT = 80;\nconst HORIZ_Y = 100;\nconst VERT_Y = 80;\nconst GAP = 10;\nconst TAB_X = DIM_X / 2 - ARROW_HEIGHT - 6 * GAP; // 400;\n\nconst COORDS = {\n  \"l\": [TAB_X, HORIZ_Y],\n  \"d\": [TAB_X + ARROW_HEIGHT + 7 * GAP, VERT_Y],\n  \"u\": [TAB_X + ARROW_HEIGHT + ARROW_WIDTH + 16 * GAP, VERT_Y],\n  \"r\": [TAB_X + ARROW_HEIGHT + 2 * ARROW_WIDTH + 23 * GAP, HORIZ_Y]\n};\nconst ARROW_KEYS = {\n  \"ArrowLeft\": \"l\",\n  \"ArrowDown\": \"d\",\n  \"ArrowUp\": \"u\",\n  \"ArrowRight\": \"r\"\n};\nconst COLORS = {\n  \"l\": \"#BF95FF\",\n  \"d\": \"#FF899E\",\n  \"u\": \"#C5C5FF\",\n  \"r\": \"#A3E9A3\"\n};\nconst IMAGE_SRC = {\n  \"l\": \"../images/left-arrow.png\",\n  \"d\": \"../images/down-arrow.png\",\n  \"u\": \"../images/up-arrow.png\",\n  \"r\": \"../images/right-arrow.png\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFPLE1BQU1BLFFBQVEsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztBQUVyQyxNQUFNQyxLQUFLLEdBQUcsSUFBSTtBQUNsQixNQUFNQyxLQUFLLEdBQUcsR0FBRztBQUVqQixNQUFNQyxXQUFXLEdBQUcsRUFBRTtBQUN0QixNQUFNQyxZQUFZLEdBQUcsRUFBRTtBQUV2QixNQUFNQyxPQUFPLEdBQUcsR0FBRztBQUNuQixNQUFNQyxNQUFNLEdBQUcsRUFBRTtBQUVqQixNQUFNQyxHQUFHLEdBQUcsRUFBRTtBQUNkLE1BQU1DLEtBQUssR0FBSVAsS0FBSyxHQUFDLENBQUMsR0FBR0csWUFBWSxHQUFHLENBQUMsR0FBQ0csR0FBRyxFQUFDOztBQUU5QyxNQUFNRSxNQUFNLEdBQUc7RUFDbEIsR0FBRyxFQUFFLENBQUNELEtBQUssRUFBRUgsT0FBTyxDQUFDO0VBQ3JCLEdBQUcsRUFBRSxDQUFDRyxLQUFLLEdBQUdKLFlBQVksR0FBRyxDQUFDLEdBQUNHLEdBQUcsRUFBRUQsTUFBTSxDQUFDO0VBQzNDLEdBQUcsRUFBRSxDQUFDRSxLQUFLLEdBQUdKLFlBQVksR0FBR0QsV0FBVyxHQUFHLEVBQUUsR0FBQ0ksR0FBRyxFQUFFRCxNQUFNLENBQUM7RUFDMUQsR0FBRyxFQUFFLENBQUNFLEtBQUssR0FBR0osWUFBWSxHQUFHLENBQUMsR0FBQ0QsV0FBVyxHQUFHLEVBQUUsR0FBQ0ksR0FBRyxFQUFFRixPQUFPO0FBQ2hFLENBQUM7QUFFTSxNQUFNSyxVQUFVLEdBQUc7RUFDdEIsV0FBVyxFQUFFLEdBQUc7RUFDaEIsV0FBVyxFQUFFLEdBQUc7RUFDaEIsU0FBUyxFQUFFLEdBQUc7RUFDZCxZQUFZLEVBQUU7QUFDbEIsQ0FBQztBQUVNLE1BQU1DLE1BQU0sR0FBRztFQUNsQixHQUFHLEVBQUUsU0FBUztFQUNkLEdBQUcsRUFBRSxTQUFTO0VBQ2QsR0FBRyxFQUFFLFNBQVM7RUFDZCxHQUFHLEVBQUU7QUFDVCxDQUFDO0FBRU0sTUFBTUMsU0FBUyxHQUFHO0VBQ3JCLEdBQUcsRUFBRSwwQkFBMEI7RUFDL0IsR0FBRyxFQUFFLDBCQUEwQjtFQUMvQixHQUFHLEVBQUUsd0JBQXdCO0VBQzdCLEdBQUcsRUFBRTtBQUNULENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjby10YXAvLi9zcmMvc2NyaXB0cy9jb25zdGFudHMuanM/Nzc4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgQUxMX0RJUlMgPSBbJ2wnLCAnZCcsICd1JywgJ3InXTtcblxuZXhwb3J0IGNvbnN0IERJTV9YID0gMTAwMDsgIFxuZXhwb3J0IGNvbnN0IERJTV9ZID0gNjAwOyBcblxuZXhwb3J0IGNvbnN0IEFSUk9XX1dJRFRIID0gNDA7XG5leHBvcnQgY29uc3QgQVJST1dfSEVJR0hUID0gODA7XG5cbmV4cG9ydCBjb25zdCBIT1JJWl9ZID0gMTAwO1xuZXhwb3J0IGNvbnN0IFZFUlRfWSA9IDgwO1xuXG5leHBvcnQgY29uc3QgR0FQID0gMTA7XG5leHBvcnQgY29uc3QgVEFCX1ggPSAgRElNX1gvMiAtIEFSUk9XX0hFSUdIVCAtIDYqR0FQIC8vIDQwMDtcblxuZXhwb3J0IGNvbnN0IENPT1JEUyA9IHtcbiAgICBcImxcIjogW1RBQl9YLCBIT1JJWl9ZXSxcbiAgICBcImRcIjogW1RBQl9YICsgQVJST1dfSEVJR0hUICsgNypHQVAsIFZFUlRfWV0sXG4gICAgXCJ1XCI6IFtUQUJfWCArIEFSUk9XX0hFSUdIVCArIEFSUk9XX1dJRFRIICsgMTYqR0FQLCBWRVJUX1ldLFxuICAgIFwiclwiOiBbVEFCX1ggKyBBUlJPV19IRUlHSFQgKyAyKkFSUk9XX1dJRFRIICsgMjMqR0FQLCBIT1JJWl9ZXVxufTtcblxuZXhwb3J0IGNvbnN0IEFSUk9XX0tFWVMgPSB7XG4gICAgXCJBcnJvd0xlZnRcIjogXCJsXCIsXG4gICAgXCJBcnJvd0Rvd25cIjogXCJkXCIsXG4gICAgXCJBcnJvd1VwXCI6IFwidVwiLFxuICAgIFwiQXJyb3dSaWdodFwiOiBcInJcIlxufVxuXG5leHBvcnQgY29uc3QgQ09MT1JTID0ge1xuICAgIFwibFwiOiBcIiNCRjk1RkZcIiwgXG4gICAgXCJkXCI6IFwiI0ZGODk5RVwiLFxuICAgIFwidVwiOiBcIiNDNUM1RkZcIixcbiAgICBcInJcIjogXCIjQTNFOUEzXCJcbn1cblxuZXhwb3J0IGNvbnN0IElNQUdFX1NSQyA9IHsgXG4gICAgXCJsXCI6IFwiLi4vaW1hZ2VzL2xlZnQtYXJyb3cucG5nXCIsXG4gICAgXCJkXCI6IFwiLi4vaW1hZ2VzL2Rvd24tYXJyb3cucG5nXCIsXG4gICAgXCJ1XCI6IFwiLi4vaW1hZ2VzL3VwLWFycm93LnBuZ1wiLFxuICAgIFwiclwiOiBcIi4uL2ltYWdlcy9yaWdodC1hcnJvdy5wbmdcIlxufSJdLCJuYW1lcyI6WyJBTExfRElSUyIsIkRJTV9YIiwiRElNX1kiLCJBUlJPV19XSURUSCIsIkFSUk9XX0hFSUdIVCIsIkhPUklaX1kiLCJWRVJUX1kiLCJHQVAiLCJUQUJfWCIsIkNPT1JEUyIsIkFSUk9XX0tFWVMiLCJDT0xPUlMiLCJJTUFHRV9TUkMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/constants.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/scripts/constants.js\");\n/* harmony import */ var _animate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./animate */ \"./src/scripts/animate.js\");\n\n\nclass Game {\n  constructor(ctx) {\n    this.ctx = ctx;\n    this.setupBoard();\n  }\n  setupBoard() {\n    this.ctx.clearRect(0, 0, _constants__WEBPACK_IMPORTED_MODULE_0__.DIM_X, _constants__WEBPACK_IMPORTED_MODULE_0__.DIM_Y);\n    // start music\n    const animation = new _animate__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.ctx);\n    animation.getChoreo.then(res => {\n      animation.choreo = res;\n      animation.startGame();\n    });\n    // animation.startGame()\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Game);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lLmpzIiwibWFwcGluZ3MiOiI7OztBQUEyQztBQUNYO0FBRWhDLE1BQU1HLElBQUksQ0FBQztFQUNQQyxXQUFXQSxDQUFDQyxHQUFHLEVBQUU7SUFDYixJQUFJLENBQUNBLEdBQUcsR0FBR0EsR0FBRztJQUNkLElBQUksQ0FBQ0MsVUFBVSxDQUFDLENBQUM7RUFDckI7RUFFQUEsVUFBVUEsQ0FBQSxFQUFHO0lBQ1QsSUFBSSxDQUFDRCxHQUFHLENBQUNFLFNBQVMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDUCw2Q0FBSyxFQUFFQyw2Q0FBSyxDQUFDO0lBQ3BDO0lBQ0EsTUFBTU8sU0FBUyxHQUFHLElBQUlOLGdEQUFPLENBQUMsSUFBSSxDQUFDRyxHQUFHLENBQUM7SUFFdkNHLFNBQVMsQ0FBQ0MsU0FBUyxDQUFDQyxJQUFJLENBQUVDLEdBQUcsSUFBSTtNQUM3QkgsU0FBUyxDQUFDSSxNQUFNLEdBQUdELEdBQUc7TUFDdEJILFNBQVMsQ0FBQ0ssU0FBUyxDQUFDLENBQUM7SUFDekIsQ0FBQyxDQUFDO0lBQ0Y7RUFDSjtBQUVKOztBQUVBLCtEQUFlVixJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGlzY28tdGFwLy4vc3JjL3NjcmlwdHMvZ2FtZS5qcz9jZGMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERJTV9YLCBESU1fWSB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuaW1wb3J0IEFuaW1hdGUgZnJvbSBcIi4vYW5pbWF0ZVwiO1xuXG5jbGFzcyBHYW1lIHtcbiAgICBjb25zdHJ1Y3RvcihjdHgpIHtcbiAgICAgICAgdGhpcy5jdHggPSBjdHhcbiAgICAgICAgdGhpcy5zZXR1cEJvYXJkKClcbiAgICB9XG5cbiAgICBzZXR1cEJvYXJkKCkge1xuICAgICAgICB0aGlzLmN0eC5jbGVhclJlY3QoMCwwLERJTV9YLCBESU1fWSlcbiAgICAgICAgLy8gc3RhcnQgbXVzaWNcbiAgICAgICAgY29uc3QgYW5pbWF0aW9uID0gbmV3IEFuaW1hdGUodGhpcy5jdHgpO1xuXG4gICAgICAgIGFuaW1hdGlvbi5nZXRDaG9yZW8udGhlbigocmVzKT0+IHtcbiAgICAgICAgICAgIGFuaW1hdGlvbi5jaG9yZW8gPSByZXM7XG4gICAgICAgICAgICBhbmltYXRpb24uc3RhcnRHYW1lKClcbiAgICAgICAgfSlcbiAgICAgICAgLy8gYW5pbWF0aW9uLnN0YXJ0R2FtZSgpXG4gICAgfVxuICAgIFxufVxuXG5leHBvcnQgZGVmYXVsdCBHYW1lOyJdLCJuYW1lcyI6WyJESU1fWCIsIkRJTV9ZIiwiQW5pbWF0ZSIsIkdhbWUiLCJjb25zdHJ1Y3RvciIsImN0eCIsInNldHVwQm9hcmQiLCJjbGVhclJlY3QiLCJhbmltYXRpb24iLCJnZXRDaG9yZW8iLCJ0aGVuIiwicmVzIiwiY2hvcmVvIiwic3RhcnRHYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/music.js":
/*!******************************!*\
  !*** ./src/scripts/music.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nclass Music {\n  constructor() {\n    this.audio = document.querySelector(\"#dance-the-night\");\n    // this.audio.play();\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Music);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9tdXNpYy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBNEM7QUFFNUMsTUFBTUMsS0FBSyxDQUFDO0VBQ1JDLFdBQVdBLENBQUEsRUFBRztJQUNWLElBQUksQ0FBQ0MsS0FBSyxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQztJQUN2RDtFQUNKO0FBRUo7O0FBRUEsK0RBQWVKLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjby10YXAvLi9zcmMvc2NyaXB0cy9tdXNpYy5qcz9mMDQxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzeW5jIH0gZnJvbSBcInJlZ2VuZXJhdG9yLXJ1bnRpbWVcIjtcblxuY2xhc3MgTXVzaWMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmF1ZGlvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkYW5jZS10aGUtbmlnaHRcIilcbiAgICAgICAgLy8gdGhpcy5hdWRpby5wbGF5KCk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IE11c2ljOyJdLCJuYW1lcyI6WyJhc3luYyIsIk11c2ljIiwiY29uc3RydWN0b3IiLCJhdWRpbyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/music.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kaXNjby10YXAvLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ (function(module) {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable || iterable === \"\") {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    throw new TypeError(typeof iterable + \" is not iterable\");\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n   true ? module.exports : 0\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;